def test_python():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–µ—Ä—Å–∏—é Python"""
    import sys
    print(f"üêç Python –≤–µ—Ä—Å–∏—è: {sys.version}")
    
    if sys.version_info < (3, 7):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.7 –∏–ª–∏ –≤—ã—à–µ!")
        return False
    else:
        print("‚úÖ –í–µ—Ä—Å–∏—è Python –ø–æ–¥—Ö–æ–¥–∏—Ç")
        return True

def test_libraries():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏"""
    print("\nüìö –ü–†–û–í–ï–†–ö–ê –ë–ò–ë–õ–ò–û–¢–ï–ö")
    print("=" * 40)
    
    libraries = [
        ("pandas", "import pandas as pd"),
        ("python-docx", "import docx"),
        ("fuzzywuzzy", "import fuzzywuzzy"),
        ("openpyxl", "import openpyxl"),
        ("jupyter", "import jupyter"),
        ("tkinter", "import tkinter"),
    ]
    
    success_count = 0
    
    for name, import_code in libraries:
        try:
            exec(import_code)
            print(f"‚úÖ {name}")
            success_count += 1
        except ImportError as e:
            print(f"‚ùå {name}: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except Exception as e:
            print(f"‚ö†Ô∏è  {name}: {e}")
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {success_count}/{len(libraries)} –±–∏–±–ª–∏–æ—Ç–µ–∫ –≥–æ—Ç–æ–≤–æ")
    
    if success_count == len(libraries):
        print("üéâ –í–°–ï –ë–ò–ë–õ–ò–û–¢–ï–ö–ò –£–°–¢–ê–ù–û–í–õ–ï–ù–´!")
        return True
    else:
        print("‚ùå –ù–µ –≤—Å–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install -r requirements.txt")
        return False

def test_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤"""
    print("\nüìÅ –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í")
    print("=" * 40)
    
    import os
    
    required_files = [
        ("gui_events.py", "–ì–ª–∞–≤–Ω—ã–π GUI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"),
        ("1.docxtocsv.ipynb", "–≠—Ç–∞–ø 1: DOCX ‚Üí CSV"),
        ("3.kod_tipovogo.ipynb", "–≠—Ç–∞–ø 2: –ö–æ–¥—ã –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π"),
        ("4.dopobrabokta.ipynb", "–≠—Ç–∞–ø 3: Excel –æ–±—Ä–∞–±–æ—Ç–∫–∞"),
    ]
    
    input_files = [
        ("test.docx", "DOCX —Å —Ç–∞–±–ª–∏—Ü–µ–π –∫—É—Ä—Å–æ–≤"),
        ("kod_tipovogo.xlsx", "Excel —Å –∫–æ–¥–∞–º–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π"),
    ]
    
    all_found = True
    
    print("üîß –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã:")
    for filename, description in required_files:
        if os.path.exists(filename):
            print(f"‚úÖ {filename}")
        else:
            print(f"‚ùå {filename} - {description}")
            all_found = False
    
    print("\nüìã –í—Ö–æ–¥–Ω—ã–µ —Ñ–∞–π–ª—ã:")
    for filename, description in input_files:
        if os.path.exists(filename):
            print(f"‚úÖ {filename}")
        else:
            print(f"‚ö†Ô∏è  {filename} - {description}")
    
    return all_found

def test_jupyter():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç Jupyter"""
    print("\nüìì –ü–†–û–í–ï–†–ö–ê JUPYTER")
    print("=" * 40)
    
    try:
        import subprocess
        result = subprocess.run(['jupyter', '--version'], 
                              capture_output=True, text=True, timeout=10)
        
        if result.returncode == 0:
            print(f"‚úÖ Jupyter —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            print(f"üìã –í–µ—Ä—Å–∏—è: {result.stdout.strip()}")
            return True
        else:
            print("‚ùå Jupyter –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return False
            
    except FileNotFoundError:
        print("‚ùå Jupyter –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install jupyter")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Jupyter: {e}")
        return False

def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫"""
    print("üîß –ü–†–û–í–ï–†–ö–ê –ì–û–¢–û–í–ù–û–°–¢–ò –°–ò–°–¢–ï–ú–´")
    print("–î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π")
    print("=" * 50)
    
    all_good = True
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
    if not test_python():
        all_good = False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫
    if not test_libraries():
        all_good = False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    if not test_files():
        all_good = False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Jupyter
    if not test_jupyter():
        all_good = False
    
    print("\n" + "=" * 50)
    if all_good:
        print("üéâ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!")
        print("‚úÖ –ú–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å run_events.bat")
    else:
        print("‚ùå –°–ò–°–¢–ï–ú–ê –ù–ï –ì–û–¢–û–í–ê")
        print("üîß –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç —Å–Ω–æ–≤–∞")

if __name__ == "__main__":
    main()